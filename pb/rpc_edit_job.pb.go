// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: rpc_edit_job.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EditJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title             string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Type              *string `protobuf:"bytes,2,opt,name=type,proto3,oneof" json:"type,omitempty"`
	WorkWhenever      *bool   `protobuf:"varint,3,opt,name=work_whenever,json=workWhenever,proto3,oneof" json:"work_whenever,omitempty"`
	WorkShift         *string `protobuf:"bytes,4,opt,name=work_shift,json=workShift,proto3,oneof" json:"work_shift,omitempty"`
	Description       string  `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Visa              *bool   `protobuf:"varint,6,opt,name=visa,proto3,oneof" json:"visa,omitempty"`
	Experience        *uint32 `protobuf:"varint,7,opt,name=experience,proto3,oneof" json:"experience,omitempty"`
	StartDate         *int64  `protobuf:"varint,8,opt,name=start_date,json=startDate,proto3,oneof" json:"start_date,omitempty"`
	Currency          string  `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	ExactSalary       *uint32 `protobuf:"varint,10,opt,name=exact_salary,json=exactSalary,proto3,oneof" json:"exact_salary,omitempty"`
	RangeSalary       *string `protobuf:"bytes,11,opt,name=range_salary,json=rangeSalary,proto3,oneof" json:"range_salary,omitempty"`
	ExpiresAt         *int64  `protobuf:"varint,12,opt,name=expires_at,json=expiresAt,proto3,oneof" json:"expires_at,omitempty"`
	EnterpriseId      *string `protobuf:"bytes,13,opt,name=enterprise_id,json=enterpriseId,proto3,oneof" json:"enterprise_id,omitempty"`
	EnterpriseName    *string `protobuf:"bytes,14,opt,name=enterprise_name,json=enterpriseName,proto3,oneof" json:"enterprise_name,omitempty"`
	EnterpriseAddress *string `protobuf:"bytes,15,opt,name=enterprise_address,json=enterpriseAddress,proto3,oneof" json:"enterprise_address,omitempty"`
	Crawl             *bool   `protobuf:"varint,16,opt,name=crawl,proto3,oneof" json:"crawl,omitempty"`
	JobUrl            *string `protobuf:"bytes,17,opt,name=job_url,json=jobUrl,proto3,oneof" json:"job_url,omitempty"`
	JobSourceName     *string `protobuf:"bytes,18,opt,name=job_source_name,json=jobSourceName,proto3,oneof" json:"job_source_name,omitempty"`
	Id                string  `protobuf:"bytes,19,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EditJobRequest) Reset() {
	*x = EditJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_edit_job_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditJobRequest) ProtoMessage() {}

func (x *EditJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_edit_job_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditJobRequest.ProtoReflect.Descriptor instead.
func (*EditJobRequest) Descriptor() ([]byte, []int) {
	return file_rpc_edit_job_proto_rawDescGZIP(), []int{0}
}

func (x *EditJobRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EditJobRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *EditJobRequest) GetWorkWhenever() bool {
	if x != nil && x.WorkWhenever != nil {
		return *x.WorkWhenever
	}
	return false
}

func (x *EditJobRequest) GetWorkShift() string {
	if x != nil && x.WorkShift != nil {
		return *x.WorkShift
	}
	return ""
}

func (x *EditJobRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EditJobRequest) GetVisa() bool {
	if x != nil && x.Visa != nil {
		return *x.Visa
	}
	return false
}

func (x *EditJobRequest) GetExperience() uint32 {
	if x != nil && x.Experience != nil {
		return *x.Experience
	}
	return 0
}

func (x *EditJobRequest) GetStartDate() int64 {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return 0
}

func (x *EditJobRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *EditJobRequest) GetExactSalary() uint32 {
	if x != nil && x.ExactSalary != nil {
		return *x.ExactSalary
	}
	return 0
}

func (x *EditJobRequest) GetRangeSalary() string {
	if x != nil && x.RangeSalary != nil {
		return *x.RangeSalary
	}
	return ""
}

func (x *EditJobRequest) GetExpiresAt() int64 {
	if x != nil && x.ExpiresAt != nil {
		return *x.ExpiresAt
	}
	return 0
}

func (x *EditJobRequest) GetEnterpriseId() string {
	if x != nil && x.EnterpriseId != nil {
		return *x.EnterpriseId
	}
	return ""
}

func (x *EditJobRequest) GetEnterpriseName() string {
	if x != nil && x.EnterpriseName != nil {
		return *x.EnterpriseName
	}
	return ""
}

func (x *EditJobRequest) GetEnterpriseAddress() string {
	if x != nil && x.EnterpriseAddress != nil {
		return *x.EnterpriseAddress
	}
	return ""
}

func (x *EditJobRequest) GetCrawl() bool {
	if x != nil && x.Crawl != nil {
		return *x.Crawl
	}
	return false
}

func (x *EditJobRequest) GetJobUrl() string {
	if x != nil && x.JobUrl != nil {
		return *x.JobUrl
	}
	return ""
}

func (x *EditJobRequest) GetJobSourceName() string {
	if x != nil && x.JobSourceName != nil {
		return *x.JobSourceName
	}
	return ""
}

func (x *EditJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EditJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *EditJobResponse) Reset() {
	*x = EditJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_edit_job_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditJobResponse) ProtoMessage() {}

func (x *EditJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_edit_job_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditJobResponse.ProtoReflect.Descriptor instead.
func (*EditJobResponse) Descriptor() ([]byte, []int) {
	return file_rpc_edit_job_proto_rawDescGZIP(), []int{1}
}

func (x *EditJobResponse) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

var File_rpc_edit_job_proto protoreflect.FileDescriptor

var file_rpc_edit_job_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x70, 0x63, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x6a, 0x6f, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6a, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x2e,
	0x6a, 0x6f, 0x62, 0x1a, 0x09, 0x6a, 0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c,
	0x07, 0x0a, 0x0e, 0x45, 0x64, 0x69, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x28, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x65, 0x76, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x57,
	0x68, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x68, 0x69, 0x66, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x17, 0x0a, 0x04, 0x76, 0x69, 0x73, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03,
	0x52, 0x04, 0x76, 0x69, 0x73, 0x61, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x26,
	0x0a, 0x0c, 0x65, 0x78, 0x61, 0x63, 0x74, 0x5f, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x06, 0x52, 0x0b, 0x65, 0x78, 0x61, 0x63, 0x74, 0x53, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0b,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x08, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x12, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x11, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0c, 0x52,
	0x05, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x6a, 0x6f, 0x62,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x06, 0x6a, 0x6f,
	0x62, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x6a, 0x6f, 0x62, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x0e, 0x52, 0x0d, 0x6a, 0x6f, 0x62, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x65, 0x76, 0x65, 0x72, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x76, 0x69, 0x73, 0x61, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x65, 0x78, 0x61, 0x63, 0x74, 0x5f,
	0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x15, 0x0a, 0x13,
	0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6a, 0x6f,
	0x62, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a,
	0x0f, 0x45, 0x64, 0x69, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6a, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f,
	0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x45, 0x43, 0x2d, 0x4a, 0x6f, 0x62, 0x73, 0x74, 0x72, 0x65,
	0x65, 0x74, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2d, 0x6a, 0x6f, 0x62, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_rpc_edit_job_proto_rawDescOnce sync.Once
	file_rpc_edit_job_proto_rawDescData = file_rpc_edit_job_proto_rawDesc
)

func file_rpc_edit_job_proto_rawDescGZIP() []byte {
	file_rpc_edit_job_proto_rawDescOnce.Do(func() {
		file_rpc_edit_job_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_edit_job_proto_rawDescData)
	})
	return file_rpc_edit_job_proto_rawDescData
}

var file_rpc_edit_job_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_rpc_edit_job_proto_goTypes = []interface{}{
	(*EditJobRequest)(nil),  // 0: jobstreet.job.EditJobRequest
	(*EditJobResponse)(nil), // 1: jobstreet.job.EditJobResponse
	(*Job)(nil),             // 2: jobstreet.job.Job
}
var file_rpc_edit_job_proto_depIdxs = []int32{
	2, // 0: jobstreet.job.EditJobResponse.job:type_name -> jobstreet.job.Job
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_rpc_edit_job_proto_init() }
func file_rpc_edit_job_proto_init() {
	if File_rpc_edit_job_proto != nil {
		return
	}
	file_job_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_rpc_edit_job_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_edit_job_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rpc_edit_job_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_edit_job_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_edit_job_proto_goTypes,
		DependencyIndexes: file_rpc_edit_job_proto_depIdxs,
		MessageInfos:      file_rpc_edit_job_proto_msgTypes,
	}.Build()
	File_rpc_edit_job_proto = out.File
	file_rpc_edit_job_proto_rawDesc = nil
	file_rpc_edit_job_proto_goTypes = nil
	file_rpc_edit_job_proto_depIdxs = nil
}
